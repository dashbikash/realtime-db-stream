package bikash.realtimedbstream.translatorservice;

import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import com.google.gson.Gson;
import com.google.gson.JsonObject;

import reactor.core.publisher.Mono;

@SpringBootApplication
@RestController
public class TranslatorserviceApplication implements CommandLineRunner{
	
	@GetMapping
	private Mono<String> index(){
		return Mono.just("Hello ! this is translator service");
	}
	
	public static void main(String[] args) {
		SpringApplication.run(TranslatorserviceApplication.class, args);
	}

	@Override
	public void run(String... args) throws Exception {
		// TODO Auto-generated method stub
		String sample="{\n"
				+ "    \"schema\": {\n"
				+ "      \"type\": \"struct\",\n"
				+ "      \"fields\": [\n"
				+ "        {\n"
				+ "          \"type\": \"struct\",\n"
				+ "          \"fields\": [\n"
				+ "            {\n"
				+ "              \"type\": \"int32\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"empid\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"fname\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"field\": \"lname\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"field\": \"dept\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"field\": \"email\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"int64\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"name\": \"io.debezium.time.Timestamp\",\n"
				+ "              \"version\": 1,\n"
				+ "              \"field\": \"dob\"\n"
				+ "            }\n"
				+ "          ],\n"
				+ "          \"optional\": true,\n"
				+ "          \"name\": \"testdb-mysql.testdb.employees.Value\",\n"
				+ "          \"field\": \"before\"\n"
				+ "        },\n"
				+ "        {\n"
				+ "          \"type\": \"struct\",\n"
				+ "          \"fields\": [\n"
				+ "            {\n"
				+ "              \"type\": \"int32\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"empid\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"fname\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"field\": \"lname\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"field\": \"dept\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"field\": \"email\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"int64\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"name\": \"io.debezium.time.Timestamp\",\n"
				+ "              \"version\": 1,\n"
				+ "              \"field\": \"dob\"\n"
				+ "            }\n"
				+ "          ],\n"
				+ "          \"optional\": true,\n"
				+ "          \"name\": \"testdb-mysql.testdb.employees.Value\",\n"
				+ "          \"field\": \"after\"\n"
				+ "        },\n"
				+ "        {\n"
				+ "          \"type\": \"struct\",\n"
				+ "          \"fields\": [\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"version\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"connector\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"name\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"int64\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"ts_ms\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"name\": \"io.debezium.data.Enum\",\n"
				+ "              \"version\": 1,\n"
				+ "              \"parameters\": {\n"
				+ "                \"allowed\": \"true,last,false,incremental\"\n"
				+ "              },\n"
				+ "              \"default\": \"false\",\n"
				+ "              \"field\": \"snapshot\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"db\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"field\": \"sequence\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"field\": \"table\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"int64\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"server_id\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"field\": \"gtid\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"file\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"int64\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"pos\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"int32\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"row\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"int64\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"field\": \"thread\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": true,\n"
				+ "              \"field\": \"query\"\n"
				+ "            }\n"
				+ "          ],\n"
				+ "          \"optional\": false,\n"
				+ "          \"name\": \"io.debezium.connector.mysql.Source\",\n"
				+ "          \"field\": \"source\"\n"
				+ "        },\n"
				+ "        {\n"
				+ "          \"type\": \"string\",\n"
				+ "          \"optional\": false,\n"
				+ "          \"field\": \"op\"\n"
				+ "        },\n"
				+ "        {\n"
				+ "          \"type\": \"int64\",\n"
				+ "          \"optional\": true,\n"
				+ "          \"field\": \"ts_ms\"\n"
				+ "        },\n"
				+ "        {\n"
				+ "          \"type\": \"struct\",\n"
				+ "          \"fields\": [\n"
				+ "            {\n"
				+ "              \"type\": \"string\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"id\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"int64\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"total_order\"\n"
				+ "            },\n"
				+ "            {\n"
				+ "              \"type\": \"int64\",\n"
				+ "              \"optional\": false,\n"
				+ "              \"field\": \"data_collection_order\"\n"
				+ "            }\n"
				+ "          ],\n"
				+ "          \"optional\": true,\n"
				+ "          \"name\": \"event.block\",\n"
				+ "          \"version\": 1,\n"
				+ "          \"field\": \"transaction\"\n"
				+ "        }\n"
				+ "      ],\n"
				+ "      \"optional\": false,\n"
				+ "      \"name\": \"testdb-mysql.testdb.employees.Envelope\",\n"
				+ "      \"version\": 1\n"
				+ "    },\n"
				+ "    \"payload\": {\n"
				+ "      \"before\": {\n"
				+ "        \"empid\": 1,\n"
				+ "        \"fname\": \"bikash\",\n"
				+ "        \"lname\": \"dash\",\n"
				+ "        \"dept\": \"it\",\n"
				+ "        \"email\": \"bikash@wipro.com\",\n"
				+ "        \"dob\": 521078400000\n"
				+ "      },\n"
				+ "      \"after\": {\n"
				+ "        \"empid\": 1,\n"
				+ "        \"fname\": \"bikash prakash\",\n"
				+ "        \"lname\": \"dash\",\n"
				+ "        \"dept\": \"it\",\n"
				+ "        \"email\": \"bikashprakashdash@wipro.com\",\n"
				+ "        \"dob\": 521078400000\n"
				+ "      },\n"
				+ "      \"source\": {\n"
				+ "        \"version\": \"2.0.1.Final\",\n"
				+ "        \"connector\": \"mysql\",\n"
				+ "        \"name\": \"testdb-mysql\",\n"
				+ "        \"ts_ms\": 1677704249000,\n"
				+ "        \"snapshot\": \"false\",\n"
				+ "        \"db\": \"testdb\",\n"
				+ "        \"sequence\": null,\n"
				+ "        \"table\": \"employees\",\n"
				+ "        \"server_id\": 1,\n"
				+ "        \"gtid\": null,\n"
				+ "        \"file\": \"binlog.000002\",\n"
				+ "        \"pos\": 754,\n"
				+ "        \"row\": 0,\n"
				+ "        \"thread\": 20,\n"
				+ "        \"query\": null\n"
				+ "      },\n"
				+ "      \"op\": \"u\",\n"
				+ "      \"ts_ms\": 1677704249289,\n"
				+ "      \"transaction\": null\n"
				+ "    }\n"
				+ "  }";
		Gson gson=new Gson();
		JsonObject msgObj=gson.fromJson(sample,JsonObject.class);
		String op=msgObj.get("payload").getAsJsonObject().get("op").getAsString();
		JsonObject newObj=new JsonObject();
		newObj.addProperty("do",op);
		if(op.equalsIgnoreCase("c")) {
			newObj.add("after",msgObj.get("payload").getAsJsonObject().get("after").getAsJsonObject());
		}
		if(op.equalsIgnoreCase("u")) {
			
			newObj.add("before",msgObj.get("payload").getAsJsonObject().get("before").getAsJsonObject());
			newObj.add("after",msgObj.get("payload").getAsJsonObject().get("after").getAsJsonObject());
		}
		if(op.equalsIgnoreCase("d")) {
			newObj.add("before",msgObj.get("payload").getAsJsonObject().get("before").getAsJsonObject());
		}
		String translated=newObj.toString();
		System.out.println(translated);
	}

}
